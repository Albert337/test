# #!/usr/bin/env python
# # -*- coding: utf-8 -*-
# # author：albert time:2019/5/12

import turtle
from turtle import *
from datetime import *

def skip(step):
    penup()
    forward(step)
    pendown()

def mkhand(name,length):
    turtle.reset()        ###建立表针turtle
    skip(-length*0.1)
    turtle.begin_poly()    ###开始记录多边形的顶点
    turtle.forward(length*1.1)
    turtle.end_poly()
    handform=turtle.get_poly()
    turtle.register_shape(name,handform)

def init():
    global sechand,minhand,hurhand,printer
    turtle.mode("logo")
    mkhand("sechand",135)
    mkhand("minhand",125)
    mkhand("hurhand",90)
    sechand=turtle.Turtle()
    sechand.shape("sechand")
    minhand=turtle.Turtle()
    minhand.shape("minhand")
    hurhand=turtle.Turtle()
    hurhand.shape("hurhand")
    for hand in sechand,minhand,hurhand:
        hand.shapesize(1,1,3)
        hand.speed(0)

    ####建立输出文字turtle
    printer=turtle.Turtle()
    printer.hideturtle()
    printer.penup()

def setupclock(radius):
    #####建立表的外框
    turtle.reset()
    turtle.pensize(7)
    for i in range(60):
        skip(radius)
        if i % 5 ==0:
            forward(20)
            skip(-radius-20)
        else:
            turtle.dot(5)
            skip(-radius)
        turtle.right(6)


def Week(t):
    week=["星期一","星期二","星期三","星期四","星期五","星期六","星期日"]
    return week[t.weekday()]

def date(t):
    y=t.year
    m=t.month
    d=t.day
    return "%s %d %d"%(y,m,d)

def tick():
    # 绘制表针的动态显示
    t = datetime.today()
    second = t.second + t.microsecond * 0.000001
    minute = t.minute + second / 60.0
    hour = t.hour + minute / 60.0
    sechand.setheading(6 * second)  # 设置朝向，每秒转动6度
    minhand.setheading(6 * minute)
    hurhand.setheading(30 * hour)

    tracer(False)  # 不显示绘制的过程，直接显示绘制结果
    printer.forward(65)
    printer.write(Week(t), align="center",
                  font=("Courier", 14, "bold"))
    printer.back(130)
    printer.write(date(t), align="center",
                  font=("Courier", 14, "bold"))
    printer.back(50)
    printer.write("i love u", align="center",
                  font=("Courier", 14, "bold"))
    printer.home()
    tracer(True)
    ontimer(tick, 1000)  # 1000ms后继续调用tick

def main():
    tracer(False)  # 使多个绘制对象同时显示
    init()
    setupclock(160)
    tracer(True)
    tick()
    mainloop()

if __name__=='__main__':
    main()

